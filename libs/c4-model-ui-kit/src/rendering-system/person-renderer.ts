import C4Person from '../components/c4-person/C4Person'
import C4PersonExt from '../components/c4-person/C4PersonExt'
import { getElementSpecByAlias } from '../helper/diagram-helper'
import { DiagramSpec } from '../models/autogenerated/DiagramSpec'
import { Person } from '../models/autogenerated/Person'
import { RenderElementsOptions } from './diagram-renderer'
import { C4BaseComponent } from '../components/C4BaseComponent'
import { ElementData } from '../models/autogenerated/ElementData'

export const renderPersonDiagramElement = (
  canvas: fabric.Canvas | undefined,
  person: Person,
  diagramSpec: DiagramSpec,
  autoLayout: Record<string, ElementData>,
  options?: RenderElementsOptions,
): C4BaseComponent | undefined => {
  if (
    person.base_data &&
    person.base_data.alias &&
    person.person_type &&
    ((diagramSpec.auto_layout_enabled && autoLayout[person.base_data.alias]) ||
      !diagramSpec.auto_layout_enabled)
  ) {
    let c4Person: C4BaseComponent | undefined
    switch (person.person_type) {
      case 'Person':
        c4Person = C4Person(
          person,
          getElementSpecByAlias(
            person.base_data.alias,
            undefined,
            undefined,
            { Person: person.person_type },
            diagramSpec,
          ),
          autoLayout,
        )
        break
      case 'Person_Ext':
        c4Person = C4PersonExt(
          person,
          getElementSpecByAlias(
            person.base_data.alias,
            undefined,
            undefined,
            { Person: person.person_type },
            diagramSpec,
          ),
          autoLayout,
        )
        break
    }
    if ((!options || !options.skipAddToCanvas) && c4Person)
      canvas?.add(c4Person)
    return c4Person
  }
  return
}

export default renderPersonDiagramElement

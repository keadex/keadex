/*!
Model representing the data of a graph element.
*/

use crate::model::graph::point::Point;
use serde::{Deserialize, Serialize};
use ts_rs::TS;
use wasm_bindgen::prelude::*;

#[derive(TS)]
#[ts(
  export,
  export_to = "../../../libs/c4-model-ui-kit/src/models/autogenerated/"
)]
#[derive(Serialize, Deserialize, Debug, Clone)]
#[wasm_bindgen]
pub struct ElementData {
  #[serde(skip_serializing_if = "Option::is_none")]
  pub position: Option<Point>,
  #[serde(skip_serializing_if = "Option::is_none")]
  pub start: Option<Point>,
  #[serde(skip_serializing_if = "Option::is_none")]
  pub end: Option<Point>,
  #[serde(skip_serializing_if = "Option::is_none")]
  pub size: Option<Point>,
}

impl ElementData {
  pub fn new(
    position: Option<Point>,
    start: Option<Point>,
    end: Option<Point>,
    size: Option<Point>,
  ) -> Self {
    Self {
      position,
      start,
      end,
      size,
    }
  }
}

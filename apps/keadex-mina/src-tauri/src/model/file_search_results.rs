use serde::{Deserialize, Serialize};
use std::collections::HashMap;
use strum_macros::{Display, EnumString};
use ts_rs::TS;

#[derive(TS)]
#[ts(
  export,
  export_to = "../../../apps/keadex-mina/src/models/autogenerated/"
)]
#[derive(Serialize, Deserialize, Display, Debug, EnumString, Clone, Default, PartialEq)]
pub enum FileSearchCategory {
  #[serde(rename = "Diagram")]
  #[strum(serialize = "Diagram")]
  Diagram,
  #[serde(rename = "Library")]
  #[strum(serialize = "Library")]
  Library,
  #[serde(rename = "Unknown")]
  #[strum(serialize = "Unknown")]
  #[default]
  Unknown,
}

#[derive(TS)]
#[ts(
  export,
  export_to = "../../../apps/keadex-mina/src/models/autogenerated/"
)]
#[derive(Serialize, Deserialize, Debug, Default, Clone)]
pub struct FileSearchResult {
  pub line_content: String,
  pub line_number: usize,
  pub category: FileSearchCategory,
  pub path: String,
}

#[derive(TS)]
#[ts(
  export,
  export_to = "../../../apps/keadex-mina/src/models/autogenerated/"
)]
#[derive(Serialize, Deserialize, Debug, Default, Clone)]
pub struct FileSearchResults {
  pub results: HashMap<String, Vec<FileSearchResult>>,
  pub count: i32,
  pub reached_limit: bool,
}

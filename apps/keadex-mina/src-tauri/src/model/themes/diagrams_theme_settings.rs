/*!
Model representing settings of the themes.
*/

use serde::{Deserialize, Serialize};
use ts_rs::TS;
use wasm_bindgen::prelude::wasm_bindgen;

#[derive(TS)]
#[ts(
  export,
  export_to = "../../../libs/c4-model-ui-kit/src/models/autogenerated/"
)]
#[wasm_bindgen(getter_with_clone)]
#[derive(Default, Serialize, Deserialize, Debug, Clone)]
pub struct DiagramsThemeSettings {
  #[serde(skip_serializing_if = "Option::is_none")]
  pub bg_color_diagram: Option<String>,
  #[serde(skip_serializing_if = "Option::is_none")]
  pub text_color_legend_title: Option<String>,
  #[serde(skip_serializing_if = "Option::is_none")]
  pub bg_color_person: Option<String>,
  #[serde(skip_serializing_if = "Option::is_none")]
  pub bg_color_person_ext: Option<String>,
  #[serde(skip_serializing_if = "Option::is_none")]
  pub border_color_person: Option<String>,
  #[serde(skip_serializing_if = "Option::is_none")]
  pub border_color_person_ext: Option<String>,
  #[serde(skip_serializing_if = "Option::is_none")]
  pub text_color_person: Option<String>,
  #[serde(skip_serializing_if = "Option::is_none")]
  pub text_color_person_ext: Option<String>,
  #[serde(skip_serializing_if = "Option::is_none")]
  pub bg_color_software_system: Option<String>,
  #[serde(skip_serializing_if = "Option::is_none")]
  pub bg_color_software_system_ext: Option<String>,
  #[serde(skip_serializing_if = "Option::is_none")]
  pub border_color_software_system: Option<String>,
  #[serde(skip_serializing_if = "Option::is_none")]
  pub border_color_software_system_ext: Option<String>,
  #[serde(skip_serializing_if = "Option::is_none")]
  pub text_color_software_system: Option<String>,
  #[serde(skip_serializing_if = "Option::is_none")]
  pub text_color_software_system_ext: Option<String>,
  #[serde(skip_serializing_if = "Option::is_none")]
  pub bg_color_container: Option<String>,
  #[serde(skip_serializing_if = "Option::is_none")]
  pub bg_color_container_ext: Option<String>,
  #[serde(skip_serializing_if = "Option::is_none")]
  pub border_color_container: Option<String>,
  #[serde(skip_serializing_if = "Option::is_none")]
  pub border_color_container_ext: Option<String>,
  #[serde(skip_serializing_if = "Option::is_none")]
  pub text_color_container: Option<String>,
  #[serde(skip_serializing_if = "Option::is_none")]
  pub text_color_container_ext: Option<String>,
  #[serde(skip_serializing_if = "Option::is_none")]
  pub bg_color_component: Option<String>,
  #[serde(skip_serializing_if = "Option::is_none")]
  pub bg_color_component_ext: Option<String>,
  #[serde(skip_serializing_if = "Option::is_none")]
  pub border_color_component: Option<String>,
  #[serde(skip_serializing_if = "Option::is_none")]
  pub border_color_component_ext: Option<String>,
  #[serde(skip_serializing_if = "Option::is_none")]
  pub text_color_component: Option<String>,
  #[serde(skip_serializing_if = "Option::is_none")]
  pub text_color_component_ext: Option<String>,
  #[serde(skip_serializing_if = "Option::is_none")]
  pub bg_color_boundary: Option<String>,
  #[serde(skip_serializing_if = "Option::is_none")]
  pub border_color_boundary: Option<String>,
  #[serde(skip_serializing_if = "Option::is_none")]
  pub text_color_boundary: Option<String>,
  #[serde(skip_serializing_if = "Option::is_none")]
  pub bg_color_deployment_node: Option<String>,
  #[serde(skip_serializing_if = "Option::is_none")]
  pub border_color_deployment_node: Option<String>,
  #[serde(skip_serializing_if = "Option::is_none")]
  pub text_color_deployment_node: Option<String>,
  #[serde(skip_serializing_if = "Option::is_none")]
  pub bg_color_relationship: Option<String>,
  #[serde(skip_serializing_if = "Option::is_none")]
  pub line_color_relationship: Option<String>,
  #[serde(skip_serializing_if = "Option::is_none")]
  pub text_color_relationship: Option<String>,
  #[serde(skip_serializing_if = "Option::is_none")]
  pub selected_color_relationship: Option<String>,
}

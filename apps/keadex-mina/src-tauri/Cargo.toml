[package]
name = "keadex_mina"
version = "2.1.2"
description = "Desktop application to draw, manage and share the architectures of software systems."
authors = ["Keadex"]
license = "MIT"
repository = ""
default-run = "keadex_mina"
edition = "2021"
rust-version = "1.77.1"

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[build-dependencies]
tauri-build = { version = "2", features = [], optional = true }
cfg_aliases = "0.2.1"

[dependencies]
serde_json = "1.0"
serde = { version = "1.0", features = ["derive"] }
log = { version = "0.4", features = ["serde"] }
env_logger = "0.8.4"
state = "0.6"
strum = { version = "0.24", features = ["derive"] }
strum_macros = "0.24"
notify = "4.0.17"
walkdir = { version = "2", optional = true }
fs2 = { version = "0.4.3", optional = true }
pest = "2.7.4"
pest_derive = "2.7.4"
convert_case = "0.6.0"
snailquote = "0.3.1"
ts-rs = "6.2.1"
uuid = { version = "1.4.1", features = [
  "v4",
  "fast-rng",
  "macro-diagnostics",
  "js"
] }
data-url = "0.2.0"
async-openai-wasm = { version = "0.26.0" }
dotenv = "0.15.0"
wasm-bindgen = "0.2"
serde-wasm-bindgen = "0.6"
bomboni_wasm = { version = "0.1", features = [
  "derive",
  "js",
], default-features = false }
fancy-regex = "0.13.0"
layout-rs = { version = "0.1.2", features = [] }
js-sys = "0.3"
web-sys = { version = "0.3", features = [
  "File",
  "FileReader",
  "FileSystemDirectoryHandle",
  "FileSystemGetDirectoryOptions",
  "FileSystemFileHandle",
  "FileSystemGetFileOptions",
  "FileSystemWritableFileStream",
  "FileSystemHandleKind",
  "FileSystemRemoveOptions",
  "FileSystemCreateWritableOptions",
  "console",
], optional = true }
wasm-bindgen-futures = {version = "0.4", optional = true}
console_log = {version = "1", optional = true}
tauri = { version = "2", features = [
  "macos-private-api",
], optional = true }
console_error_panic_hook = {version = "0.1", optional = true}
async-std = "1.13"
async-trait = "0.1"
futures = "0.3"
chrono = "0.4"
keadex_mina_macro = { path = "../src-macro" }
tauri-plugin-http = { version = "2", optional = true }
tauri-plugin-clipboard-manager = { version = "2.0.1", optional = true }
tauri-plugin-os = { version = "2", optional = true }
tauri-plugin-notification = { version = "2", optional = true }
tauri-plugin-process = { version = "2", optional = true }
tauri-plugin-dialog = { version = "2", optional = true }
tauri-plugin-shell = { version = "2", optional = true }
tauri-plugin-fs = { version = "2", optional = true }
tauri-plugin-global-shortcut = { version = "2", optional = true }
tauri-plugin-updater = { version = "2", optional = true }
tauri-plugin-deep-link = { version = "2", optional = true }
tauri-plugin-single-instance = { version = "2", features = ["deep-link"], optional = true }

[features]
# default = ["web"]
default = ["desktop", "custom-protocol"]
custom-protocol = ["tauri/custom-protocol"]
desktop = [
  "tauri",
  "tauri-plugin-http",
  "tauri-plugin-clipboard-manager",
  "tauri-plugin-os",
  "tauri-plugin-notification",
  "tauri-plugin-process",
  "tauri-plugin-dialog",
  "tauri-plugin-shell",
  "tauri-plugin-fs",
  "tauri-plugin-global-shortcut",
  "tauri-plugin-updater",
  "tauri-plugin-deep-link",
  "tauri-plugin-single-instance",
  "dep:tauri-build",
  "dep:fs2",
  "dep:walkdir"
]
web = [
  "dep:web-sys",
  "dep:wasm-bindgen-futures",
  "dep:console_error_panic_hook",
  "dep:console_log"
]

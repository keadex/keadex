import { DiagramElementType, buildTags } from '@keadex/c4-model-ui-kit'
import { Project } from '../../models/autogenerated/Project'
import { LibraryElementType } from '../../views/LibraryElement/LibraryElement'
import { Dispatch, SetStateAction } from 'react'

export interface ModalCRULibraryElementProps {
  mode?: 'createLibraryElement' | 'updateLibraryElement' | 'serializer'
  libraryElement?: Partial<LibraryElementType>
  project?: Project
  diagramAliases: string[]
  enableEdit: boolean
  forceUpdate?: () => void
  hideModal: () => void
  onElementCreated?: (element: DiagramElementType) => void
}

export function normalizeLibraryElement(
  libraryElement: LibraryElementType,
): LibraryElementType {
  if (libraryElement.base_data.description === '') {
    libraryElement.base_data.description = undefined
  }
  if ('technology' in libraryElement && libraryElement.technology === '') {
    libraryElement.technology = undefined
  }
  return libraryElement
}

export function onTagsChanged<T extends LibraryElementType>(
  event: CustomEvent<Tagify.AddEventData<Tagify.TagData>>,
  setState: Dispatch<SetStateAction<T>>,
) {
  setState((prevBoundary) => {
    return {
      ...prevBoundary,
      base_data: {
        ...prevBoundary?.base_data,
        tags: buildTags(event.detail.tagify.value.map((value) => value.value)),
      },
    }
  })
}

name: 'release mina'
on:
  push:
    branches:
      - main
      - prerelease/keadex-mina*

jobs:
  check-affected:
    runs-on: ubuntu-latest
    outputs:
      is_mina_affected: ${{ steps.affected.outputs.is_mina_affected }}

    steps:
      - name: checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      # -------------- START TO REMOVE
      # - uses: actions/setup-node@v4
      #   with:
      #     node-version: 20
      # - run: npm install --global yarn
      # -------------- END TO REMOVE
      - name: setup node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'yarn'
      - uses: nrwl/nx-set-shas@v4
      - run: yarn --frozen-lockfile
      - name: Affected
        run: echo "affected=$(yarn --silent nx show projects --affected --json | jq -Rsa)" >> "$GITHUB_ENV"
      # - name: Affected
      #   run: echo "affected=[\"keadex-battisti\"]" >> "$GITHUB_ENV"
      - name: Is affected
        id: affected
        run: echo "is_mina_affected=${{ contains(fromJson(env.affected), 'keadex-mina') }}" >> "$GITHUB_OUTPUT"

  # release-mina:
  #   runs-on: ubuntu-latest
  #   needs: check-affected
  #   if: needs.check-affected.outputs.is_mina_affected == 'true'
  #   steps:
  #     - name: check
  #       run: echo "${{needs.check-affected.outputs.is_mina_affected}}"

  release-mina:
    needs: check-affected
    if: needs.check-affected.outputs.is_mina_affected == 'true'
    permissions:
      contents: write
    strategy:
      fail-fast: true
      matrix:
        include:
          - platform: 'macos-latest' # for Arm based macs (M1 and above).
            args: '--target aarch64-apple-darwin'
          - platform: 'macos-latest' # for Intel based macs.
            args: '--target x86_64-apple-darwin'
          - platform: 'ubuntu-22.04' # for Tauri v1 you could replace this with ubuntu-20.04.
            args: ''
          - platform: 'windows-latest'
            args: ''
    runs-on: ${{ matrix.platform }}
    env:
      project_path: ./apps/keadex-mina

    steps:
      - name: checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: setup node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'yarn'
      - name: install Rust stable
        uses: dtolnay/rust-toolchain@stable
        with:
          # Those targets are only used on macos runners so it's in an `if` to slightly speed up windows and linux builds.
          targets: ${{ matrix.platform == 'macos-latest' && 'aarch64-apple-darwin,x86_64-apple-darwin' || '' }}
      - name: install dependencies (ubuntu only)
        if: matrix.platform == 'ubuntu-22.04'
        run: |
          sudo apt-get update
          sudo apt-get install -y libwebkit2gtk-4.1-dev libappindicator3-dev librsvg2-dev patchelf
      - name: install frontend dependencies
        run: yarn --frozen-lockfile
      - uses: tauri-apps/tauri-action@v0.5.16
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAURI_SIGNING_PRIVATE_KEY: ${{ secrets.TAURI_SIGNING_PRIVATE_KEY }}
          TAURI_SIGNING_PRIVATE_KEY_PASSWORD: ${{ secrets.TAURI_SIGNING_PRIVATE_KEY_PASSWORD }}
        with:
          tagName: keadex-mina-v__VERSION__ # the action automatically replaces \_\_VERSION\_\_ with the app version
          releaseName: 'Keadex Mina v__VERSION__'
          releaseBody: ${{ github.event.head_commit.message }}
          projectPath: ${{ env.project_path }}
          args: ${{ matrix.args }}

  update-latest-json:
    if: ${{ ! startsWith(github.ref, 'refs/heads/prerelease/keadex-mina') }}
    needs: release-mina
    runs-on: ubuntu-latest
    steps:
      - name: download latest latest.json
        run: wget https://github.com/keadex/keadex/releases/latest/download/latest.json
      - name: check
        run: ls
      - name: deploy to gist
        uses: exuanbo/actions-deploy-gist@v1
        with:
          token: ${{ secrets.GIST_TOKEN }}
          gist_id: 7f3ebbc2691dc83591c96a6662f37e94
          file_path: latest.json
          gist_file_name: keadex-mina-latest.json

  build-mina-cli:
    needs: update-latest-json
    permissions:
      contents: write
    strategy:
      fail-fast: true
      matrix:
        platform:
          - os-name: Linux-x86_64-musl
            runs-on: ubuntu-22.04
            target: x86_64-unknown-linux-musl

          - os-name: Linux-x86_64-gnu
            runs-on: ubuntu-22.04
            target: x86_64-unknown-linux-gnu

          - os-name: Windows-x86_64
            runs-on: windows-latest
            target: x86_64-pc-windows-msvc

          - os-name: macOS-x86_64
            runs-on: macos-latest
            target: x86_64-apple-darwin

          - os-name: macOS-aarch64
            runs-on: macos-latest
            target: aarch64-apple-darwin

    runs-on: ${{ matrix.platform.runs-on }}
    env:
      PKG_CONFIG_ALLOW_CROSS: 1

    steps:
      - name: checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: install dependencies (ubuntu only)
        if: matrix.platform.runs-on == 'ubuntu-22.04'
        run: |
          sudo apt-get update
          sudo apt-get install -y libwebkit2gtk-4.1-dev libappindicator3-dev librsvg2-dev patchelf libgtk-3-dev  build-essential libssl-dev librsvg2-dev libglib2.0-dev

      - name: Build binary
        uses: houseabsolute/actions-rust-cross@v0
        with:
          target: ${{ matrix.platform.target }}
          args: '--locked --release'
          strip: true
          working-directory: './libs/mina-cli'
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # Waiting for https://github.com/houseabsolute/actions-rust-release/pull/2
      - name: Workaround for uploading a sub-package
        run: cp -R ./libs/mina-cli/target ./

      - name: Upload artifacts
        uses: houseabsolute/actions-rust-release@v0
        with:
          executable-name: mina-cli
          target: ${{ matrix.platform.target }}
          changes-file: 'Mina-CLI-Changes.md'

  release-mina-cli:
    needs: build-mina-cli
    permissions:
      contents: write
    runs-on: ubuntu-22.04
    steps:
      - name: checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Download All Artifacts
        uses: actions/download-artifact@v4
        with:
          path: mina-cli-artifacts
          pattern: mina-cli-*
          merge-multiple: true
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Retrieve Mina CLI Version
        id: mina_version
        uses: SebRollen/toml-action@v1.2.0
        with:
          file: 'libs/mina-cli/Cargo.toml'
          field: 'package.version'

      - name: Release
        uses: softprops/action-gh-release@v2
        with:
          draft: false
          name: mina-cli@${{steps.mina_version.outputs.value}}
          tag_name: mina-cli@${{steps.mina_version.outputs.value}}
          files: mina-cli-artifacts/*
          token: ${{ secrets.GITHUB_TOKEN }}

name: 'release mina'
on:
  push:
    branches:
      - main

jobs:
  check-affected:
    runs-on: ubuntu-latest
    outputs:
      is_mina_affected: ${{ steps.affected.outputs.is_mina_affected }}

    steps:
      - uses: actions/checkout@v3
        name: Checkout
        with:
          fetch-depth: 0
      # -------------- START TO REMOVE
      # - uses: actions/setup-node@v3
      #   with:
      #     node-version: 18
      # - run: npm install --global yarn
      # -------------- END TO REMOVE
      - uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'yarn'
      - uses: nrwl/nx-set-shas@v4
      - run: yarn --frozen-lockfile
      - name: Affected
        run: |
          node --version
          yarn --version
          yarn nx --version
          echo "affected=$(yarn --silent nx show projects --affected --json | jq -Rsa)" >> "$GITHUB_ENV"
      # - name: Affected
      #   run: echo "affected=[\"keadex-battisti\"]" >> "$GITHUB_ENV"
      - name: Is affected
        id: affected
        run: echo "is_mina_affected=${{ contains(fromJson(env.affected), 'keadex-mina') }}" >> "$GITHUB_OUTPUT"

  # release-mina:
  #   runs-on: ubuntu-latest
  #   needs: check-affected
  #   if: needs.check-affected.outputs.is_mina_affected == 'true'
  #   steps:
  #     - name: check
  #       run: echo "${{needs.check-affected.outputs.is_mina_affected}}"

  release-mina:
    needs: check-affected
    if: needs.check-affected.outputs.is_mina_affected == 'true'
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        platform: [macos-latest, ubuntu-20.04, windows-latest]
    runs-on: ${{ matrix.platform }}

    steps:
      - uses: actions/checkout@v3
      - name: setup node
        uses: actions/setup-node@v3
        with:
          node-version: 16
      - name: install Rust stable
        uses: dtolnay/rust-toolchain@stable
      - name: install dependencies (ubuntu only)
        if: matrix.platform == 'ubuntu-20.04'
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-3-dev libwebkit2gtk-4.0-dev libappindicator3-dev librsvg2-dev patchelf
      - name: install frontend dependencies
        run: yarn --frozen-lockfile
      - uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tagName: app-v__VERSION__ # the action automatically replaces \_\_VERSION\_\_ with the app version
          releaseName: 'App v__VERSION__'
          releaseBody: 'See the assets to download this version and install.'
          releaseDraft: true
          prerelease: false
